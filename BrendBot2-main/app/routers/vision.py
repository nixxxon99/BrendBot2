from __future__ import annotations
from aiogram import Router, F
from aiogram.types import Message
from app.services.vision import recognize_brands_from_bytes
from app.services.brands import fuzzy_suggest

router = Router()

@router.message(F.text == "üì∏ –§–æ—Ç–æ-–∞–Ω–∞–ª–∏–∑")
async def info(m: Message):
    await m.answer("–ü—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ –ø–æ–ª–∫–∏ –∏–ª–∏ –±—É—Ç—ã–ª–∫–∏ ‚Äî –ø–æ–ø—Ä–æ–±—É—é —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –±—Ä–µ–Ω–¥—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∞–Ω–∞–ª–æ–≥–∏.")

@router.message(F.photo)
async def handle_photo(m: Message):
    p = m.photo[-1]
    file = await m.bot.get_file(p.file_id)
    file_bytes = await m.bot.download_file(file.file_path)
    data = file_bytes.read()
    brands = recognize_brands_from_bytes(data)
    if not brands:
        await m.answer("–ü–æ–∫–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –±—Ä–µ–Ω–¥—ã (–º–æ–¥—É–ª—å Vision –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω). –Ø –¥–æ–±–∞–≤–∏–ª –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É ‚Äî –ø–æ–¥–∫–ª—é—á–∏ Google Vision/CLIP –≤ app/services/vision.py.")
        return
    # show suggestions
    lines = []
    for b in brands[:5]:
        lines.append(f"‚Ä¢ {b}")
        sugg = fuzzy_suggest(b)
        if sugg:
            lines.append(f"  ‚Ü≥ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: {sugg[0]}")
    await m.answer("\n".join(lines) if lines else "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à—ë–ª –Ω–∞ —Ñ–æ—Ç–æ.")
